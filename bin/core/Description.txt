Range: Range of the Rule : file, class, interface, enum, method, constructor
Keyword: Java keyword: abstract	continue for new switch
assert default	goto	package	synchronized
boolean	do	if	private	this
break	double	implements	protected	throw
byte	else	import	public	throws
case	enum	instanceof	return	transient
catch	extends	int	short	try
char	final	interface	static	void
class	finally	long	strictfp	volatile
const	float	native	super	while

Structure of a Rule

RuleType ( active, Range, parameter1, paramenter2,... );

// Rule for If statement
IF_NotAllowElse(deactive, file);
IF_MustUseBracket(active, CONSTRUCTOR);

// Rule for Switch statement
SWITCH_MustHaveDefaultBranch(active, CONSTRUCTOR);

// Rule for While statement
WHILE_MustUseTrueConstantCondition(active, FILE);
WHILE_MustUseBracket

// Naming Rules
/*
 * Element = class, interface, enum, variable, field, package,
 * ConditionOfNaming: Define later 
 */
NAMING_(active, METHOD, Element, ConditionOfNaming);

// File's Rules
FILE_MustHavePackageDeclaration(active, FILE);

GENERAL_MustUseAnnotation(active, METHOD, "field");

// Comment Rules
COMMENT_MustHaveJavaDoc(active, METHOD, field);
COMMENT_MustHaveBlockComment(active, METHOD);
CLASS_MustHaveDefaultConstructor(active, FILE);
VARIABLE_NotAllowNameConflict(active, FILE);

WRAPLINE_NotAllowTooLongLine(active, FILE, 80); //"80" is the upper bound of line's length

NAMING_(active, METHOD, "condition of method name");
NAMING_(active, CLASS, "condition of class name");

INDENT(active, FILE, space = 4);